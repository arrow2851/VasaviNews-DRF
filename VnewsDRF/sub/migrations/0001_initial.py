# Generated by Django 2.1 on 2018-08-23 14:31

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('userlist', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('timestamp', models.DateTimeField(verbose_name=django.utils.timezone.now)),
                ('banned_list', models.ManyToManyField(default=None, related_name='class_bannedlist', to='userlist.Vser')),
                ('moderators', models.ManyToManyField(related_name='class_modlist', to='userlist.Vser')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_owner', to='userlist.Vser')),
                ('subscribers', models.ManyToManyField(related_name='class_subslist', to='userlist.Vser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Clubs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('timestamp', models.DateTimeField(verbose_name=django.utils.timezone.now)),
                ('banned_list', models.ManyToManyField(default=None, related_name='clubs_bannedlist', to='userlist.Vser')),
                ('moderators', models.ManyToManyField(related_name='clubs_modlist', to='userlist.Vser')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clubs_owner', to='userlist.Vser')),
                ('subscribers', models.ManyToManyField(related_name='clubs_subslist', to='userlist.Vser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('removed', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(verbose_name=django.utils.timezone.now)),
                ('score', models.IntegerField(default=1)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userlist.Vser')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='sub.Comment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('timestamp', models.DateTimeField(verbose_name=django.utils.timezone.now)),
                ('banned_list', models.ManyToManyField(default=None, related_name='news_bannedlist', to='userlist.Vser')),
                ('moderators', models.ManyToManyField(related_name='news_modlist', to='userlist.Vser')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_owner', to='userlist.Vser')),
                ('subscribers', models.ManyToManyField(related_name='news_subslist', to='userlist.Vser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=150)),
                ('text', models.TextField(blank=True, max_length=5000)),
                ('url', models.URLField(blank=True, null=True)),
                ('comment_count', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('score', models.IntegerField(default=1)),
                ('locked', models.BooleanField(default=False)),
                ('removed', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userlist.Vser')),
                ('classgroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub.Class')),
                ('clubsgroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub.Clubs')),
                ('newsgroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub.News')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub.Post'),
        ),
    ]
